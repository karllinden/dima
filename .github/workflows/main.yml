name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  linux-build:
    strategy:
      matrix:
        buildtype: [debug, release]
        compiler: [gcc, clang]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: sudo apt-get install check
    - run: pip install meson ninja
    - run: meson build --buildtype=${{ matrix.buildtype }} --prefix=${HOME}/local
      env:
        CC: ${{ matrix.compiler }}
    - run: ninja -C build -v
    - run: ninja -C build test -v
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: ${{ matrix.platform }}-testlog
        path: build/meson-logs/testlog.txt
    - run: ninja -C build install

  macos-build:
    strategy:
      matrix:
        buildtype: [debug, release]
        compiler: [gcc, clang]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: brew install gcc
      if: matrix.compiler == 'gcc'
    - run: pip install meson ninja
    - run: meson build --buildtype=${{ matrix.buildtype }} -Dtest=disabled
      env:
        CC: ${{ matrix.compiler }}
    - run: ninja -C build -v
    - run: ninja -C build install


  windows-build:
    strategy:
      matrix:
        buildtype: [debug, release]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install meson ninja
    - run: meson build --buildtype=${{ matrix.buildtype }} -Dtest=disabled
      env:
        CC: gcc
    - run: ninja -C build -v
    - run: ninja -C build install
